
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* ScheduleConfig
*/
public class ScheduleConfig {
	@JsonProperty("FrequencyType")
	public long FrequencyType;

	@JsonProperty("SecondsPast")
	public long SecondsPast;

	@JsonProperty("Offset")
	public long Offset;

	@JsonProperty("RestrictRuntime")
	public boolean RestrictRuntime;

	@JsonProperty("FromTime")
	public HourSchedConfig FromTime;

	@JsonProperty("ToTime")
	public HourSchedConfig ToTime;

	@JsonProperty("RestrictDays")
	public boolean RestrictDays;

	@JsonProperty("DaysSelect")
	public DaysOfWeekConfig DaysSelect;

	@JsonProperty("RandomDelaySecs")
	public long RandomDelaySecs;

	@JsonProperty("SelectedMonth")
	public long SelectedMonth;

	@JsonProperty("SelectedDay")
	public long SelectedDay;


	public ScheduleConfig(){ }

	/**
	* @return JSON representation of the ScheduleConfig
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	/**
	* @param jsStr JSON representation of a ScheduleConfig
	* @return The deserialized ScheduleConfig
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	static public ScheduleConfig fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,ScheduleConfig.class);
	}

}
