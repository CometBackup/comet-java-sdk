
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* BackupJobDetail
*/
public class BackupJobDetail {
	@JsonProperty("GUID")
	public String GUID = "";

	@JsonProperty("Username")
	public String Username = "";

	@JsonProperty("Classification")
	public long Classification;

	@JsonProperty("Status")
	public long Status;

	//Unix timestamp in seconds
	@JsonProperty("StartTime")
	public long StartTime;

	//Unix timestamp in seconds. Will be zero if the job is still running.
	@JsonProperty("EndTime")
	public long EndTime;

	@JsonProperty("RetryCount")
	public long RetryCount;

	//The Protected Item that this job is for
	@JsonProperty("SourceGUID")
	public String SourceGUID = "";

	//The Storage Vault that this job is for
	@JsonProperty("DestinationGUID")
	public String DestinationGUID = "";

	@JsonProperty("DeviceID")
	public String DeviceID = "";

	@JsonProperty("SnapshotID")
	public String SnapshotID = "";

	//The ID of the backup rule that contains the schedule that triggered this job
	@JsonProperty("BackupRuleGUID")
	public String BackupRuleGUID = "";

	@JsonProperty("ClientVersion")
	public String ClientVersion = "";

	@JsonProperty("TotalDirectories")
	public long TotalDirectories;

	@JsonProperty("TotalFiles")
	public long TotalFiles;

	@JsonProperty("TotalSize")
	public long TotalSize;

	@JsonProperty("TotalChunks")
	public long TotalChunks;

	@JsonProperty("UploadSize")
	public long UploadSize;

	@JsonProperty("DownloadSize")
	public long DownloadSize;

	//For Hyper-V and VMware backup jobs, the total number of virtual machines.
	@JsonProperty("TotalVmCount")
	public long TotalVmCount;

	//For Office 365 backup jobs, the total number of mailboxes.
	@JsonProperty("TotalMailsCount")
	public long TotalMailsCount;

	//For Office 365 backup jobs, the total number of SharePoint sites.
	@JsonProperty("TotalSitesCount")
	public long TotalSitesCount;

	//For Office 365 backup jobs, the calculated effective number of protected accounts.
	@JsonProperty("TotalAccountsCount")
	public long TotalAccountsCount;

	//For Office 365 backup jobs, the number of licensed mailboxes.
	@JsonProperty("TotalLicensedMailsCount")
	public long TotalLicensedMailsCount;

	//For Office 365 backup jobs, the number of unlicensed mailboxes.
	@JsonProperty("TotalUnlicensedMailsCount")
	public long TotalUnlicensedMailsCount;

	//If this field is present, it is possible to request cancellation of this job via the API.
	@JsonProperty("CancellationID")
	public String CancellationID = "";

	//If this backup job is still running, additional partial-progress information may be present in this field.
	@JsonProperty("Progress")
	public BackupJobProgress Progress;

	//The size of the Storage Vault, as measured at the start of the job.
	@JsonProperty("DestinationSizeStart")
	public SizeMeasurement DestinationSizeStart;

	//The size of the Storage Vault, as measured at the end of the job.
	@JsonProperty("DestinationSizeEnd")
	public SizeMeasurement DestinationSizeEnd;


	public BackupJobDetail(){ }

	/**
	* @return JSON representation of the BackupJobDetail
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	/**
	* @param jsStr JSON representation of a BackupJobDetail
	* @return The deserialized BackupJobDetail
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	static public BackupJobDetail fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,BackupJobDetail.class);
	}

}
