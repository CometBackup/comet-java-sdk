
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* LocalDestinationLocation
*/
public class LocalDestinationLocation {
	@JsonProperty("LocalcopyPath")
	public String LocalcopyPath = "";

	//If logging in to a Windows network share (SMB/CIFS) is required, enter the username here.
	@JsonProperty("LocalcopyWinSMBUsername")
	public String LocalcopyWinSMBUsername = "";

	//If logging in to a Windows network share (SMB/CIFS) is required, enter the password here. The password may be hashed
	//as per the LocalcopyWinSMBPasswordFormat field.
	@JsonProperty("LocalcopyWinSMBPassword")
	public String LocalcopyWinSMBPassword = "";

	//One of the PASSWORD_FORMAT_ constants. It controls the hash format of the LocalcopyWinSMBPassword field.
	@JsonProperty("LocalcopyWinSMBPasswordFormat")
	public long LocalcopyWinSMBPasswordFormat;


	public LocalDestinationLocation(){ }

	/**
	* @return JSON representation of the LocalDestinationLocation
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	/**
	* @param jsStr JSON representation of a LocalDestinationLocation
	* @return The deserialized LocalDestinationLocation
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	static public LocalDestinationLocation fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,LocalDestinationLocation.class);
	}

}
