
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* WebAuthnUserEntity
*/
public class WebAuthnUserEntity {
	@JsonProperty("name")
	public String Name = "";

	@JsonProperty("icon")
	public String Icon = "";

	@JsonProperty("displayName")
	public String DisplayName = "";

	@JsonProperty("id")
	public byte[] ID;


	public WebAuthnUserEntity(){ }

	/**
	* @return JSON representation of the WebAuthnUserEntity
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	/**
	* @param jsStr JSON representation of a WebAuthnUserEntity
	* @return The deserialized WebAuthnUserEntity
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	static public WebAuthnUserEntity fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,WebAuthnUserEntity.class);
	}

	/**
	* @return Returns a copy of the embedded WebAuthnCredentialEntity
	*/
	public WebAuthnCredentialEntity GetEmbeddedWebAuthnCredentialEntity(){
		var ret = new WebAuthnCredentialEntity();
		ret.Name = this.Name;
		ret.Icon = this.Icon;
		return ret;
	}
	public void SetEmbeddedWebAuthnCredentialEntity(WebAuthnCredentialEntity other){
		this.Name = other.Name;
		this.Icon = other.Icon;
	}

}
