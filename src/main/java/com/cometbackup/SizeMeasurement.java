
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* SizeMeasurement
*/
public class SizeMeasurement {
	//Bytes
	@JsonProperty("Size")
	public long Size;

	//Unix timestamp in seconds
	@JsonProperty("MeasureStarted")
	public long MeasureStarted;

	//Unix timestamp in seconds
	@JsonProperty("MeasureCompleted")
	public long MeasureCompleted;


	public SizeMeasurement(){ }

	/**
	* @return JSON representation of the SizeMeasurement
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	/**
	* @param jsStr JSON representation of a SizeMeasurement
	* @return The deserialized SizeMeasurement
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	static public SizeMeasurement fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,SizeMeasurement.class);
	}

}
