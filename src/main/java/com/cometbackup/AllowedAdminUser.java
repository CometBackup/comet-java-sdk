
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* AllowedAdminUser
*/
public class AllowedAdminUser {
	@JsonProperty("Username")
	public String Username = "";

	@JsonProperty("OrganizationID")
	public String OrganizationID = "";

	@JsonProperty("ExternalAuthenticationSource")
	public String ExternalAuthenticationSource = "";

	//One of the PASSWORD_FORMAT_ constants
	@JsonProperty("PasswordFormat")
	public int PasswordFormat;

	@JsonProperty("Password")
	public String Password = "";

	@JsonProperty("AllowPasswordLogin")
	public boolean AllowPasswordLogin;

	@JsonProperty("AllowPasswordAndTOTPLogin")
	public boolean AllowPasswordAndTOTPLogin;


	// deprecated since Comet version 21.12.0
	@JsonProperty("AllowPasswordAndU2FLogin")
	public boolean AllowPasswordAndU2FLogin;

	@JsonProperty("AllowPasswordAndWebAuthnLogin")
	public boolean AllowPasswordAndWebAuthnLogin;


	// deprecated since Comet version 21.12.0
	@JsonProperty("U2FRegistrations")
	public ArrayList<AdminU2FRegistration> U2FRegistrations;

	@JsonProperty("WebAuthnRegistrations")
	public ArrayList<AdminWebAuthnRegistration> WebAuthnRegistrations;

	@JsonProperty("RequirePasswordChange")
	public boolean RequirePasswordChange;

	//One of the ENCRYPTIONMETHOD_ constants
	@JsonProperty("TOTPKeyEncryptionFormat")
	public int TOTPKeyEncryptionFormat;

	@JsonProperty("TOTPKey")
	public String TOTPKey = "";

	//A regular expression in Go regex syntax, for which IP addresses are allowed to authenticate as this admin account
	@JsonProperty("IPWhitelist")
	public String IPWhitelist = "";

	@JsonProperty("Permissions")
	public AdminUserPermissions Permissions;


	public AllowedAdminUser(){ }

	/**
	* @return JSON representation of the AllowedAdminUser
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	/**
	* @param jsStr JSON representation of a AllowedAdminUser
	* @return The deserialized AllowedAdminUser
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	static public AllowedAdminUser fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,AllowedAdminUser.class);
	}

	/**
	* @return Returns a copy of the embedded AdminSecurityOptions
	*/
	public AdminSecurityOptions GetEmbeddedAdminSecurityOptions(){
		var ret = new AdminSecurityOptions();
		ret.PasswordFormat = this.PasswordFormat;
		ret.Password = this.Password;
		ret.AllowPasswordLogin = this.AllowPasswordLogin;
		ret.AllowPasswordAndTOTPLogin = this.AllowPasswordAndTOTPLogin;
		ret.AllowPasswordAndU2FLogin = this.AllowPasswordAndU2FLogin;
		ret.AllowPasswordAndWebAuthnLogin = this.AllowPasswordAndWebAuthnLogin;
		ret.U2FRegistrations = this.U2FRegistrations;
		ret.WebAuthnRegistrations = this.WebAuthnRegistrations;
		ret.RequirePasswordChange = this.RequirePasswordChange;
		ret.TOTPKeyEncryptionFormat = this.TOTPKeyEncryptionFormat;
		ret.TOTPKey = this.TOTPKey;
		ret.IPWhitelist = this.IPWhitelist;
		return ret;
	}
	public void SetEmbeddedAdminSecurityOptions(AdminSecurityOptions other){
		this.PasswordFormat = other.PasswordFormat;
		this.Password = other.Password;
		this.AllowPasswordLogin = other.AllowPasswordLogin;
		this.AllowPasswordAndTOTPLogin = other.AllowPasswordAndTOTPLogin;
		this.AllowPasswordAndU2FLogin = other.AllowPasswordAndU2FLogin;
		this.AllowPasswordAndWebAuthnLogin = other.AllowPasswordAndWebAuthnLogin;
		this.U2FRegistrations = other.U2FRegistrations;
		this.WebAuthnRegistrations = other.WebAuthnRegistrations;
		this.RequirePasswordChange = other.RequirePasswordChange;
		this.TOTPKeyEncryptionFormat = other.TOTPKeyEncryptionFormat;
		this.TOTPKey = other.TOTPKey;
		this.IPWhitelist = other.IPWhitelist;
	}

}
