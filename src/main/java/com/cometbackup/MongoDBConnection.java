
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* MongoDBConnection
*/
public class MongoDBConnection {
	@JsonProperty("Server")
	public String Server = "";

	@JsonProperty("Port")
	public int Port;

	@JsonProperty("Username")
	public String Username = "";

	@JsonProperty("Password")
	public String Password = "";

	@JsonProperty("AuthenticationDB")
	public String AuthenticationDB = "";


	// deprecated since Comet version 22.12.3
	//Prior to Comet 22.12.3, must be a filesystem path to `mongo` (n.b. not `mongosh`). In Comet >= 22.12.3, not used.
	@JsonProperty("MongoShellPath")
	public String MongoShellPath = "";

	@JsonProperty("MongodumpPath")
	public String MongodumpPath = "";

	@JsonProperty("ReadPreference")
	public String ReadPreference = "";

	@JsonProperty("UseReplica")
	public boolean UseReplica;

	@JsonProperty("ReplicaName")
	public String ReplicaName = "";

	@JsonProperty("ReplicaMembers")
	public ArrayList<String> ReplicaMembers;

	@JsonProperty("UseSSL")
	public boolean UseSSL;

	@JsonProperty("ClientSSLPEMPath")
	public String ClientSSLPEMPath = "";

	@JsonProperty("ServerSSLPEMPath")
	public String ServerSSLPEMPath = "";

	@JsonProperty("SSLClientKeyPassword")
	public String SSLClientKeyPassword = "";

	@JsonProperty("AllowInvalidCertificate")
	public boolean AllowInvalidCertificate;

	@JsonProperty("AllowInvalidHostname")
	public boolean AllowInvalidHostname;

	@JsonProperty("UseSSH")
	public boolean UseSSH;

	@JsonProperty("SSHConnection")
	public SSHConnection SSHConnection;


	public MongoDBConnection(){ }

	/**
	* @return JSON representation of the MongoDBConnection
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	/**
	* @param jsStr JSON representation of a MongoDBConnection
	* @return The deserialized MongoDBConnection
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	static public MongoDBConnection fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,MongoDBConnection.class);
	}

}
