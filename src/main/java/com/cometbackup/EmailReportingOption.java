
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* EmailReportingOption
*/
public class EmailReportingOption {
	@JsonProperty("EmailReportConfig")
	public EmailReportConfig EmailReportConfig;

	//A supported language code (e.g. "en_US" or the DEFAULT_LANGUAGE constant)
	@JsonProperty("LanguageCode")
	public String LanguageCode = "";

	//The timezone in IANA format (e.g. "Pacific/Auckland" or the DEFAULT_TIMEZONE constant)
	@JsonProperty("LocalTimezone")
	public String LocalTimezone = "";

	@JsonProperty("Recipients")
	public ArrayList<String> Recipients;


	public EmailReportingOption(){ }

	/**
	* @return JSON representation of the EmailReportingOption
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	/**
	* @param jsStr JSON representation of a EmailReportingOption
	* @return The deserialized EmailReportingOption
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	static public EmailReportingOption fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,EmailReportingOption.class);
	}

}
