
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* SFTPDestinationLocation
*/
public class SFTPDestinationLocation {
	@JsonProperty("SFTPServer")
	public String SFTPServer = "";

	@JsonProperty("SFTPUsername")
	public String SFTPUsername = "";

	//The directory on the SFTP server in which data is stored.
	@JsonProperty("SFTPRemotePath")
	public String SFTPRemotePath = "";

	//One of the DESTINATION_SFTP_AUTHMODE_ constants
	@JsonProperty("SFTPAuthMode")
	public long SFTPAuthMode;

	//For use with DESTINATION_SFTP_AUTHMODE_PASSWORD only: the SSH password to connect with
	@JsonProperty("SFTPPassword")
	public String SFTPPassword = "";

	//For use with DESTINATION_SFTP_AUTHMODE_PRIVATEKEY only: the SSH private key to connect with, in OpenSSH format.
	@JsonProperty("SFTPPrivateKey")
	public String SFTPPrivateKey = "";

	//If true, then the SFTPCustomAuth_KnownHostsFile will be used to verify the remote SSH server's host key, using Trust
	//On First Use (TOFU).
	@JsonProperty("SFTPCustomAuth_UseKnownHostsFile")
	public boolean SFTPCustomAuth_UseKnownHostsFile;

	//If SFTPCustomAuth_UseKnownHostFile is true, the path to the SSH known_hosts file.
	@JsonProperty("SFTPCustomAuth_KnownHostsFile")
	public String SFTPCustomAuth_KnownHostsFile = "";


	public SFTPDestinationLocation(){ }

	/**
	* @return JSON representation of the SFTPDestinationLocation
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	/**
	* @param jsStr JSON representation of a SFTPDestinationLocation
	* @return The deserialized SFTPDestinationLocation
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	static public SFTPDestinationLocation fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,SFTPDestinationLocation.class);
	}

}
