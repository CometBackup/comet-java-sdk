
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* ProxmoxRestoreTargetOptions
*/
public class ProxmoxRestoreTargetOptions {
	//The name of the node to restore to in the Proxmox Cluster
	@JsonProperty("Node")
	public String Node = "";

	@JsonProperty("SSH")
	public SSHConnection SSH;

	//the name of the storage location to restore to
	@JsonProperty("Storage")
	public String Storage = "";


	public ProxmoxRestoreTargetOptions(){ }

	/**
	* @return JSON representation of the ProxmoxRestoreTargetOptions
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	/**
	* @param jsStr JSON representation of a ProxmoxRestoreTargetOptions
	* @return The deserialized ProxmoxRestoreTargetOptions
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	static public ProxmoxRestoreTargetOptions fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,ProxmoxRestoreTargetOptions.class);
	}

	/**
	* @return Returns a copy of the embedded ProxmoxConnection
	*/
	public ProxmoxConnection GetEmbeddedProxmoxConnection(){
		var ret = new ProxmoxConnection();
		ret.SSH = this.SSH;
		return ret;
	}
	public void SetEmbeddedProxmoxConnection(ProxmoxConnection other){
		this.SSH = other.SSH;
	}

}
