
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* ObjectLockStorageTemplateSettings
*/
public class ObjectLockStorageTemplateSettings {

	// deprecated since Comet version 23.x.x
	@JsonProperty("UseObjectLock")
	public boolean UseObjectLock_Legacy_DoNotUse;

	//Control whether the resulting Storage Vaults are configured for Object Lock. One of the OBJECT_LOCK_ constants
	@JsonProperty("ObjectLockMode")
	public short ObjectLockMode;

	@JsonProperty("ObjectLockDays")
	public int ObjectLockDays;

	//Control whether the "Allow removal of deleted files" checkbox is enabled for Storage Vaults generated from this
	//Storage Template.
	//When configuring a Storage Template from the Comet Server web interface, this field is set automatically for Storage
	//Templates using Object Lock.
	@JsonProperty("RemoveDeleted")
	public boolean RemoveDeleted;


	public ObjectLockStorageTemplateSettings(){ }

	/**
	* @return JSON representation of the ObjectLockStorageTemplateSettings
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	/**
	* @param jsStr JSON representation of a ObjectLockStorageTemplateSettings
	* @return The deserialized ObjectLockStorageTemplateSettings
	* @throws JsonProcessingException If JSON is malformed (should not happen)
	*/
	static public ObjectLockStorageTemplateSettings fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,ObjectLockStorageTemplateSettings.class);
	}

}
