
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* UserProfileConfig This is the main data structure for a user's profile.
*/
public class UserProfileConfig {
	//The name for this account. It uniquely identifies this UserProfileConfig across the entire Comet Server. It cannot be
	//changed directly.
	@JsonProperty("Username")
	public String Username = "";

	//A longer descriptive name for this account. It is not necessarily unique to the Comet Server. The end-user might be
	//able to change it inside the Comet Backup desktop app.
	@JsonProperty("AccountName")
	public String AccountName = "";

	//Timezone in IANA format. Individual devices may declare a more specific timezone in the Devices field.
	@JsonProperty("LocalTimezone")
	public String LocalTimezone = "";

	//One of the supported languages, such as en_US (DEFAULT_LANGUAGE).
	@JsonProperty("LanguageCode")
	public String LanguageCode = "";

	//Tenant
	@JsonProperty("OrganizationID")
	public String OrganizationID = "";

	//A list of email addresses to send reports to.
	@JsonProperty("Emails")
	public ArrayList<String> Emails;

	//By default, all the email addresses in the Emails field will receieve the policy-default or server-wide-default style
	//of email report. Add an override for a specific email address in here to allow customizing the email report that will
	//be received.
	@JsonProperty("OverrideEmailSettings")
	public HashMap<String, UserCustomEmailSettings> OverrideEmailSettings;

	//This option can be used to control whether any email reports are sent.
	@JsonProperty("SendEmailReports")
	public boolean SendEmailReports;

	//Storage Vaults
	//The string keys can be any unique key. Using a GUID is recommended, but optional.
	@JsonProperty("Destinations")
	public HashMap<String, DestinationConfig> Destinations;

	//Protected Items
	//The string keys can be any unique key. Using a GUID is recommended, but optional.
	@JsonProperty("Sources")
	public HashMap<String, SourceConfig> Sources;

	//Schedules
	//The string keys can be any unique key. Using a GUID is recommended, but optional.
	@JsonProperty("BackupRules")
	public HashMap<String, BackupRuleConfig> BackupRules;

	//Devices
	//The string keys are the device's ID. The device ID is generated automatically based on a mix of hardware and software
	//identifiers on the installed PC.
	//To revoke a device, use the AdminRevokeDevice API instead of accessing these fields directly. This API can also
	//remove associated Protected Items, uninstall the remote device, and disconnect its live connection.
	@JsonProperty("Devices")
	public HashMap<String, DeviceConfig> Devices;

	@JsonProperty("IsSuspended")
	public boolean IsSuspended;

	//Unix timestamp in seconds. Zero if the device is not suspended.
	@JsonProperty("LastSuspended")
	public long LastSuspended;

	//A limit on the total Size of all Protected Items in this account. The number of bytes should be configured in
	//AllProtectedItemsQuotaBytes.
	@JsonProperty("AllProtectedItemsQuotaEnabled")
	public boolean AllProtectedItemsQuotaEnabled;

	//A limit on the total Size of all Protected Items in this account. It is enforced if AllProtectedItemsQuotaEnabled is
	//true.
	@JsonProperty("AllProtectedItemsQuotaBytes")
	public long AllProtectedItemsQuotaBytes;

	//A limit on the total number of devices registered in this account. Set to zero to allow unlimited devices.
	@JsonProperty("MaximumDevices")
	public long MaximumDevices;

	//A limit on the total number of Office 365 Protected Accounts across all Office 365 Protected Items in this account.
	//Set to zero to allow unlimited Office 365 Protected Accounts.
	@JsonProperty("QuotaOffice365ProtectedAccounts")
	public long QuotaOffice365ProtectedAccounts;

	//If the PolicyID field is set to a non-empty string, the Comet Server will enforce the contents of the Policy field
	//based on the matching server's policy. Otherwise if the PolicyID field is set to an empty string, the administrator
	//may configure any custom values in the Policy field.
	@JsonProperty("PolicyID")
	public String PolicyID = "";

	//The Policy field contains a read-only copy of the effective Policy that is applied to this user account.
	@JsonProperty("Policy")
	public UserPolicy Policy;

	//One of the PASSWORD_FORMAT_ constants
	//To change the user's password, use the AdminResetUserPassword API instead of accessing these fields directly.
	//Otherwise, other encrypted fields in the user profile may become corrupted.
	@JsonProperty("PasswordFormat")
	public int PasswordFormat;

	@JsonProperty("PasswordHash")
	public String PasswordHash = "";

	//If this field is empty, the "Allow administrator to reset my password" feature is turned off. If this field is
	//filled, it contains a cryptographic root of trust that can decrypt and re-encrypt other secrets in this profile.
	@JsonProperty("PasswordRecovery")
	public String PasswordRecovery = "";

	@JsonProperty("AllowPasswordLogin")
	public boolean AllowPasswordLogin;

	//If true, then TOTP is required to open the desktop app or the Comet Server web interface with this user's
	//credentials.
	@JsonProperty("AllowPasswordAndTOTPLogin")
	public boolean AllowPasswordAndTOTPLogin;

	//One of the ENCRYPTIONMETHOD_ constants
	@JsonProperty("TOTPKeyEncryptionFormat")
	public int TOTPKeyEncryptionFormat;

	@JsonProperty("TOTPKey")
	public String TOTPKey = "";

	@JsonProperty("RequirePasswordChange")
	public boolean RequirePasswordChange;

	//Unix timestamp in seconds
	@JsonProperty("CreateTime")
	public long CreateTime;

	//A random GUID that is allocated when the user profile is created for the first time. You can use this to help
	//disambiguate users with the same username across multiple Comet Servers.
	@JsonProperty("CreationGUID")
	public String CreationGUID = "";

	//Additional server-wide settings that are enforced for this user profile
	@JsonProperty("ServerConfig")
	public UserServerConfig ServerConfig;


	public UserProfileConfig(){ }

	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	static public UserProfileConfig fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,UserProfileConfig.class);
	}

}
