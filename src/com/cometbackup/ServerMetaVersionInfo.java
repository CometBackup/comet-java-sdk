
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* ServerMetaVersionInfo
*/
public class ServerMetaVersionInfo {
	@JsonProperty("Version")
	public String Version = "";

	@JsonProperty("VersionCodename")
	public String VersionCodename = "";

	@JsonProperty("StorageRole")
	public boolean StorageRole;

	@JsonProperty("AuthenticationRole")
	public boolean AuthenticationRole;

	@JsonProperty("SoftwareBuildRole")
	public boolean SoftwareBuildRole;


	// deprecated since Comet version 18.2.0 \"Overseer Role\" was the old name for the Constellation Role. This field is a duplicate of ConstellationRole for backward compatibility with earlier API consumers.
	@JsonProperty("OverseerRole")
	public boolean ConstellationRole_Legacy;

	@JsonProperty("ConstellationRole")
	public boolean ConstellationRole;

	@JsonProperty("ExperimentalOptions")
	public ArrayList<String> ExperimentalOptions;

	//Unix timestamp, in seconds.
	@JsonProperty("ServerStartTime")
	public long ServerStartTime;

	//A GUID that was randomly generated when this Comet Server started up. You can check this value to see if the Comet
	//Server has restarted.
	@JsonProperty("ServerStartHash")
	public String ServerStartHash = "";

	//The current time on the Comet Server host machine. Unix timestamp, in seconds. You can check this value to see if
	//clock drift is occuring.
	@JsonProperty("CurrentTime")
	public long CurrentTime;

	//A hash derived from the Comet Server's serial number. You can check this value to see if two Comet Server endpoints
	//point to an identical server.
	@JsonProperty("ServerLicenseHash")
	public String ServerLicenseHash = "";

	@JsonProperty("ServerLicenseFeaturesAll")
	public boolean ServerLicenseFeaturesAll;

	@JsonProperty("ServerLicenseFeatureSet")
	public long ServerLicenseFeatureSet;

	//Unix timestamp, in seconds.
	@JsonProperty("LicenseValidUntil")
	public long LicenseValidUntil;

	@JsonProperty("EmailsSentSuccessfully")
	public long EmailsSentSuccessfully;

	@JsonProperty("EmailsSentErrors")
	public long EmailsSentErrors;

	@JsonProperty("EmailsWaitingInQueue")
	public long EmailsWaitingInQueue;

	@JsonProperty("ScheduledEmailThreadCurrentState")
	public long ScheduledEmailThreadCurrentState;

	@JsonProperty("ScheduledEmailThreadLastCalculateDurationNanos")
	public long ScheduledEmailThreadLastCalculateDurationNanos;

	@JsonProperty("ScheduledEmailThreadWaitingUntil")
	public long ScheduledEmailThreadWaitingUntil;

	@JsonProperty("ScheduledEmailThreadLastWakeTime")
	public long ScheduledEmailThreadLastWakeTime;

	@JsonProperty("ScheduledEmailThreadLastWakeSentEmails")
	public boolean ScheduledEmailThreadLastWakeSentEmails;

	@JsonProperty("SelfBackup")
	public ArrayList<SelfBackupStatistics> SelfBackup;


	public ServerMetaVersionInfo(){ }

	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	static public ServerMetaVersionInfo fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,ServerMetaVersionInfo.class);
	}

}
