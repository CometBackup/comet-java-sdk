
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* SelfBackupTarget
*/
public class SelfBackupTarget {
	@JsonProperty("Schedule")
	public ArrayList<ScheduleConfig> Schedule;

	//Timezone in IANA format
	@JsonProperty("ScheduleTimezone")
	public String ScheduleTimezone = "";

	@JsonProperty("RetentionPolicy")
	public RetentionPolicy RetentionPolicy;

	@JsonProperty("Location")
	public DestinationLocation Location;

	@JsonProperty("EncryptionKey")
	public String EncryptionKey = "";

	//One of the ENCRYPTIONMETHOD_ constants
	@JsonProperty("EncryptionKeyFormat")
	public long EncryptionKeyFormat;

	//One of the COMPRESS_LVL_ constants
	@JsonProperty("Compression")
	public int Compression;

	//The jobs database is often the largest component of the Server Self-Backup archive. By excluding it, you could run
	//the Server Self-Backup more often.
	@JsonProperty("ExcludeJobsDB")
	public boolean ExcludeJobsDB;

	@JsonProperty("IncludeServerLogs")
	public boolean IncludeServerLogs;

	@JsonProperty("RestrictToSingleOrgID")
	public String RestrictToSingleOrgID = "";

	@JsonProperty("Index")
	public int Index;


	public SelfBackupTarget(){ }

	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	static public SelfBackupTarget fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,SelfBackupTarget.class);
	}

	public SelfBackupExportOptions GetEmbeddedSelfBackupExportOptions(){
		var ret = new SelfBackupExportOptions();
		ret.Location = this.Location;
		ret.EncryptionKey = this.EncryptionKey;
		ret.EncryptionKeyFormat = this.EncryptionKeyFormat;
		ret.Compression = this.Compression;
		ret.ExcludeJobsDB = this.ExcludeJobsDB;
		ret.IncludeServerLogs = this.IncludeServerLogs;
		ret.RestrictToSingleOrgID = this.RestrictToSingleOrgID;
		ret.Index = this.Index;
		return ret;
	}
	public void SetEmbeddedSelfBackupExportOptions(SelfBackupExportOptions other){
		this.Location = other.Location;
		this.EncryptionKey = other.EncryptionKey;
		this.EncryptionKeyFormat = other.EncryptionKeyFormat;
		this.Compression = other.Compression;
		this.ExcludeJobsDB = other.ExcludeJobsDB;
		this.IncludeServerLogs = other.IncludeServerLogs;
		this.RestrictToSingleOrgID = other.RestrictToSingleOrgID;
		this.Index = other.Index;
	}

}
