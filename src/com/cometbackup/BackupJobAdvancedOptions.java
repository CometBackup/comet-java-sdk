
// AUTOGENERATED, DO NOT EDIT\n\n"
package com.cometbackup;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.util.*;

/**
* BackupJobAdvancedOptions BackupJobAdvancedOptions control additional advanced options for running a backup job. They
* can be specified as part of a schedule in the BackupRuleConfig type, or supplied immediately when running a job.
*/
public class BackupJobAdvancedOptions {
	@JsonProperty("SkipAlreadyRunning")
	public boolean SkipAlreadyRunning;

	//If Zero: disabled
	@JsonProperty("StopAfter")
	public long StopAfter;

	//If Zero: disabled
	@JsonProperty("LimitVaultSpeedBps")
	public long LimitVaultSpeedBps;

	//Default disabled
	@JsonProperty("ReduceDiskConcurrency")
	public boolean ReduceDiskConcurrency;

	//Default disabled
	@JsonProperty("UseOnDiskIndexes")
	public boolean UseOnDiskIndexes;

	//Default disabled
	@JsonProperty("AllowZeroFilesSuccess")
	public boolean AllowZeroFilesSuccess;

	//If Zero: default Automatic (BACKUPJOBAUTORETENTION_AUTOMATIC)
	@JsonProperty("AutoRetentionLevel")
	public long AutoRetentionLevel;

	@JsonProperty("LogLevel")
	public String LogLevel = "";


	public BackupJobAdvancedOptions(){ }

	public String toJson() throws JsonProcessingException {
		return CometAPI.getObjectMapper().writeValueAsString(this);
	}

	static public BackupJobAdvancedOptions fromJson(String jsStr) throws JsonProcessingException {
		return CometAPI.getObjectMapper().readValue(jsStr,BackupJobAdvancedOptions.class);
	}

}
